---
- hosts: all
  become: true

  tasks:
    # 1. Create a Non-root User
    - name: Create user 'serigy'
      ansible.builtin.user:
        name: serigy
        state: present
        groups: wheel
        shell: /bin/bash

    # 2. Install Necessary Security Tools
    - name: Install EPEL and security packages
      ansible.builtin.dnf:
        name:
          - epel-release
          - fail2ban
          - policycoreutils-python-utils
          - audit
          - vim
          - nano
          - chrony
        state: present

    # 3. Enable SELinux
    - name: Ensure SELinux is enforcing
      ansible.builtin.shell: |
        setenforce 1
        sed -i 's/^SELINUX=.*/SELINUX=enforcing/' /etc/selinux/config
      args:
        warn: false

    # 4. Enable and Configure Fail2Ban
    - name: Copy Fail2Ban configuration file
      ansible.builtin.copy:
        dest: /etc/fail2ban/jail.local
        content: |
          [DEFAULT]
          bantime = 10m
          findtime = 10m
          maxretry = 5

          [sshd]
          enabled = true

    - name: Start and enable Fail2Ban
      ansible.builtin.service:
        name: fail2ban
        state: started
        enabled: true

    # 5. Configure Auditd
    - name: Enable and start Auditd
      ansible.builtin.service:
        name: auditd
        state: started
        enabled: true

    - name: Harden Auditd rules
      ansible.builtin.copy:
        dest: /etc/audit/audit.rules
        content: |
          -w /etc/passwd -p wa -k passwd_changes
          -w /etc/shadow -p wa -k shadow_changes
          -w /var/log/secure -p wa -k secure_logs
          -w /var/log/messages -p wa -k message_logs
          -w /etc/ssh/sshd_config -p wa -k ssh_config_changes

    # 6. Configure SSH for Security
    - name: Configure SSH for best practices
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - { regexp: '^#?PermitRootLogin.*', line: 'PermitRootLogin no' }
        - { regexp: '^#?PasswordAuthentication.*', line: 'PasswordAuthentication no' }
        - { regexp: '^#?AllowUsers.*', line: 'AllowUsers serigy' }

    - name: Restart SSHD
      ansible.builtin.service:
        name: sshd
        state: restarted

    # 7. Enable Firewall
    - name: Ensure firewalld is installed and running
      ansible.builtin.service:
        name: firewalld
        state: started
        enabled: true

    - name: Configure firewall rules
      ansible.builtin.firewalld:
        service: "{{ item }}"
        permanent: true
        state: enabled
      with_items:
        - ssh
        - http
        - https

    # 8. Time Synchronization
    - name: Enable chrony for time sync
      ansible.builtin.service:
        name: chronyd
        state: started
        enabled: true

    # 9. Kernel Hardening
    - name: Harden sysctl parameters
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-hardening.conf
        content: |
          net.ipv4.conf.all.rp_filter = 1
          net.ipv4.conf.default.rp_filter = 1
          net.ipv4.conf.all.accept_redirects = 0
          net.ipv4.conf.default.accept_redirects = 0
          net.ipv4.conf.all.send_redirects = 0
          net.ipv4.conf.default.send_redirects = 0
          net.ipv4.conf.all.log_martians = 1
          net.ipv4.conf.default.log_martians = 1
          kernel.randomize_va_space = 2

    - name: Apply sysctl changes
      ansible.builtin.command: sysctl -p /etc/sysctl.d/99-hardening.conf

    # 10. Disable Unused Services
    - name: Disable unnecessary services
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
        enabled: false
      with_items:
        - cups
        - avahi-daemon
