trigger:
  branches:
    include:
      - "*"

stages:
  - stage: Test
    jobs:
      - job: SAST
        displayName: "Static Application Security Testing"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
          - script: |
              echo "üõ°Ô∏è Running Static Application Security Testing (SAST)..."
              # Implement SAST tool integration here
            displayName: "Run SAST"

  - stage: Setup
    jobs:
      - job: ServerSetup
        displayName: "Server Hardening"
        steps:
          - script: |
              echo "üîí Performing server hardening..."
              make setup
            displayName: "Execute server setup"
          - publish: logs/
            artifact: ansible_logs
            displayName: "Upload Ansible Logs"

  - stage: Docker
    dependsOn: Setup
    jobs:
      - job: DockerInstall
        displayName: "Install Docker"
        steps:
          - script: |
              echo "üê≥ Installing Docker..."
              make docker
            displayName: "Install Docker and configure dependencies"
          - publish: logs/
            artifact: ansible_logs
            displayName: "Upload Docker Logs"

  - stage: Swarm
    dependsOn: Docker
    jobs:
      - job: ConfigureSwarm
        displayName: "Configure Docker Swarm"
        steps:
          - script: |
              echo "üêù Configuring Docker Swarm..."
              make swarm
            displayName: "Run Docker Swarm configuration"
          - publish: logs/
            artifact: ansible_logs
            displayName: "Upload Swarm Logs"

  - stage: IntegrationTests
    dependsOn: Swarm
    jobs:
      - job: RunIntegrationTests
        displayName: "Run Integration Tests"
        steps:
          - script: |
              echo "üß™ Running integration tests..."
              ansible-playbook -i inventory.yml tests/test_setup.yml
            displayName: "Execute Ansible playbooks for integration tests"
          - publish: logs/
            artifact: integration_test_logs
            displayName: "Upload Integration Test Logs"

variables:
  TAILSCALE_AUTH_KEY: $(TAILSCALE_AUTH_KEY)  # Use Azure Pipeline secrets
  TAILSCALE_ROUTES: $(TAILSCALE_ROUTES)
  TAILSCALE_SVR1_IP: $(TAILSCALE_SVR1_IP)
  TAILSCALE_SVR2_IP: $(TAILSCALE_SVR2_IP)
  TAILSCALE_SVR3_IP: $(TAILSCALE_SVR3_IP)

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        echo "Installing Tailscale..."
        curl -fsSL https://pkgs.tailscale.com/stable/debian/bullseye.gpg | sudo gpg --dearmor -o /usr/share/keyrings/tailscale-archive-keyring.gpg
        curl -fsSL https://pkgs.tailscale.com/stable/debian/bullseye.list | sudo tee /etc/apt/sources.list.d/tailscale.list
        sudo apt-get update && sudo apt-get install -y tailscale
        tailscale up --authkey=${TAILSCALE_AUTH_KEY} --advertise-routes=${TAILSCALE_ROUTES}
    displayName: "Authenticate with Tailscale"

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: 'logs/'
      artifactName: 'build_logs'
      publishLocation: 'Container'
